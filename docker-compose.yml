version: '3'
services:
  frontend-nginx:
    build:
      context: ./frontend/docker
      dockerfile: nginx.docker
    volumes:
      - ./frontend:/var/www/frontend
    depends_on:
      - api-php-fpm
    ports:
      - "8080:80"

  frontend-nodejs:
    image: node:18.16
    volumes:
      - ./frontend:/var/www/frontend2
    working_dir: /var/www/frontend2
    tty: true


  frontend-nginx-2:
    build:
      context: ./frontend2/docker
      dockerfile: nginx.docker
    volumes:
      - ./frontend2:/var/www/frontend2
    depends_on:
      - api-php-fpm
    ports:
      - "5555:80"

  frontend-nodejs-2:
    image: node:18.16
    volumes:
      - ./frontend2:/var/www/frontend2
    working_dir: /var/www/frontend2
    tty: true

  api-nginx:
    build:
      context: './api/docker'
      dockerfile: 'nginx.dockerfile'
    ports:
      - "8081:80"
    depends_on:
      - api-php-fpm

  api-php-fpm:
    build:
      context: './api/docker'
      dockerfile: 'php-fpm.dockerfile'
    volumes:
      - ./api:/var/www/api
    command: >
      sh -c "
      composer install --no-interaction --no-cache
      && php bin/console doctrine:database:create --if-not-exists
      && php bin/console doctrine:migrations:migrate --all-or-nothing --allow-no-migration -vvv
      && php-fpm"
    working_dir: /var/www/api
    restart: on-failure
    user: root
    environment:
      PHP_IDE_CONFIG: serverName=app-backend
    depends_on:
      - api-mysql
      - mailer

  api-mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: app
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "33061:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  mailer:
    image: mailhog/mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8082:8025"

volumes:
  mysql_data: